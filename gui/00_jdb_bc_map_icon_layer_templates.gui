types MapIcons {
	type widget_unit_icon_item = widget {
		size = { 114 35 }
		datacontext = "[UnitMapIcon.GetDisplayedUnitItem]"
		allow_outside = yes
		alwaystransparent = no

		tooltipwidget = {
			using = unit_icon_tooltip
		}
		using = tooltip_se

		# jdb
		widget = {
			datacontext = "[UnitItem.GetArmy.GetCommander]"
			visible = "[Character.IsValid]"
			size = { 84 95 }
			parentanchor = hcenter
			position = { 20 -170 }
			allow_outside = yes

			widget = {
				parentanchor = hcenter
				size = { 84 95 }

				state = {
					name = "map_zoom_close"
					size = { 84 95 }
					duration = 0.25
					trigger_when = "[LessThan_int32( GetZoomLevel, '(int32)14' )]"
				}
				state = {
					name = "map_zoom_far"
					size = { 67 76 }
					duration = 0.25
					trigger_when = "[GreaterThan_int32( GetZoomLevel, '(int32)13' )]"
				}

				button = {
					name = "portrait_pin"
					parentanchor = bottom|hcenter
		
					texture = "gfx/interface/icons/map_icons/portrait_pin.dds"
					# Using percentages so it's relative to the size of the top widget
					size = { 100% 100% }
		
					tooltip = "[Character.GetLocationDesc]"
					onclick = "[DefaultOnCharacterClick(Character.GetID)]"

					# crown
					icon = {
						# visible = "[And(Character.IsRuler, Not(IsLandlessAdventurer(Character)))]"
						# visible = "[And(Not(Character.GetPrimaryTitle.IsMercenaryCompany), Not(Character.GetPrimaryTitle.IsHolyOrder))]"
						visible = "[And(And(Character.IsRuler, Not(IsLandlessAdventurer(Character))), And(Not(Character.GetPrimaryTitle.IsMercenaryCompany), Not(Character.GetPrimaryTitle.IsHolyOrder)))]"
						parentanchor = top|hcenter
						position = { 0 -21 }
						alwaystransparent = yes
						texture = "gfx/interface/coat_of_arms/crown_strip_62.dds"
						frame = "[Character.GetPrimaryTitle.GetTierFrame]"
						framesize = { 42 31 }
					}
		
					background = {
						texture = "gfx/interface/component_masks/mask_fade_circle.dds"
						color = { 0.1 0.1 0.1 1 }
						margin = { 20 20 }
						alpha = 0.5
					}
		
					portrait_button = {
						parentanchor = bottom|hcenter
						# Using percentages so it's relative to the size of the top widget
						size = { 95% 105% }
						using = portrait_base
						portrait_texture = "[Character.GetPortrait('environment_head', 'camera_shoulders', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
						mask = "gfx/portraits/portrait_mask_map.dds"
						effectname = "NoHighlight"
						using = Portrait_Background_Glows
					}
				}

				# flavor texts
				widget = {
					parentanchor = right
					position = { -14 16 }
					alwaystransparent = yes

					hbox = {
						visible = "[And( UnitItem.IsRetreating, GetScriptedGui('jdb_bc_has_commander_flavor_text_retreat').IsShown( GuiScope.SetRoot( Character.MakeScope ).End) )]"
						spacing = 4
						
						background = {
							using = Background_Area_Solid
							modify_texture = {
								name = "mask"
								texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
								spriteType = Corneredstretched
								spriteborder = { 0 0 }
								blend_mode = alphamultiply
								mirror = horizontal
							}
							alpha = 0.7
							margin_top = 2
							margin_bottom = 4
							margin_right = 60
						}

						icon = {
							size = { 20 20 }
							texture = "gfx/interface/icons/court_position_types/master_of_hunt_court_position.dds"
						}

						text_single = {
							min_width = 30
							align = nobaseline
							default_format = "#high;bold"	
							text = "[Character.Custom('JdbBcGetCommanderFlavorTextRetreat')]"
						}
					}

					hbox = {
						visible = "[And( UnitItem.GetArmy.IsSieging, GetScriptedGui('jdb_bc_has_commander_flavor_text_siege').IsShown( GuiScope.SetRoot( Character.MakeScope ).End) )]"
						spacing = 4
						
						background = {
							using = Background_Area_Solid
							modify_texture = {
								name = "mask"
								texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
								spriteType = Corneredstretched
								spriteborder = { 0 0 }
								blend_mode = alphamultiply
								mirror = horizontal
							}
							alpha = 0.7
							margin_top = 2
							margin_bottom = 4
							margin_right = 60
						}

						icon = {
							size = { 20 20 }
							texture = "gfx/interface/icons/court_position_types/master_of_hunt_court_position.dds"
						}

						text_single = {
							min_width = 30
							align = nobaseline
							default_format = "#high;bold"	
							text = "[Character.Custom('JdbBcGetCommanderFlavorTextSiege')]"
						}
					}
				}
			}

			# coa army owner
			widget = {
				visible = "[ObjectsEqual(Character.Self, UnitItem.GetArmy.GetOwner.Self)]"
				size = { 58 50 }
				parentanchor = top|hcenter
				position = { -45 8 }
				allow_outside = yes

				# ally flag
				icon = {
					alwaystransparent = yes
					visible = "[UnitItem.IsUnitItemAlly]"
					texture = "gfx/interface/icons/diplomatic_icons.dds"
					frame = 2
					framesize = { 120 120 }
					size = { 36 36 }
					parentanchor = center
					position = { 0 -25 }

					background = {
						texture = "gfx/interface/component_masks/mask_fade_circle.dds"
						color = { 0.8 0.8 1.0 1 }
						margin = { 20 25 }
						alpha = 0.5
					}
				}

				# at war flag
				icon = {
					visible = "[UnitItem.IsUnitItemEnemy]"
					texture = "gfx/interface/icons/war_score/icon_war_score_battles.dds"
					parentanchor = center
					size = { 40 40 }
					position = { 0 -28 }

					background = {
						texture = "gfx/interface/component_masks/mask_fade_circle.dds"
						color = { 1.0 0.1 0.1 1 }
						margin = { 20 25 }
						alpha = 0.7
					}
				}

				coa_realm_small = {
					visible = "[Character.IsValid]"
					parentanchor = top|hcenter
				}
			}

			# coa non-army owner
			widget = {
				visible = "[Not(ObjectsEqual(Character.Self, UnitItem.GetArmy.GetOwner.Self))]"
				size = { 58 50 }
				parentanchor = top|hcenter
				position = { -45 8 }
				allow_outside = yes

				# ally flag
				icon = {
					alwaystransparent = yes
					visible = "[UnitItem.IsUnitItemAlly]"
					texture = "gfx/interface/icons/diplomatic_icons.dds"
					frame = 2
					framesize = { 120 120 }
					size = { 36 36 }

					parentanchor = center
					position = { 0 -25 }

					background = {
						texture = "gfx/interface/component_masks/mask_fade_circle.dds"
						color = { 0.8 0.8 1.0 1 }
						margin = { 20 25 }
						alpha = 0.5
					}
				}

				# at war flag
				icon = {
					visible = "[UnitItem.IsUnitItemEnemy]"
					texture = "gfx/interface/icons/war_score/icon_war_score_battles.dds"
					parentanchor = center
					size = { 40 40 }
					position = { 0 -28 }

					background = {
						texture = "gfx/interface/component_masks/mask_fade_circle.dds"
						color = { 1.0 0.1 0.1 1 }
						margin = { 20 25 }
						alpha = 0.7
					}
				}

				coa_realm_small = {
					datacontext = "[UnitItem.GetArmy.GetOwner]"
					visible = "[Character.IsValid]"
					parentanchor = top|hcenter
				}

				coa_realm_tiny = {
					visible = "[And( Character.IsValid, Or( Character.GetPrimaryTitle.IsMercenaryCompany, Character.GetPrimaryTitle.IsHolyOrder) )]"
					parentanchor = top|hcenter
					position = { 85 0 }
				}
			}
		}
		# jdb end

		flowcontainer = {
			position = { -10 0 }

			ignoreinvisible = yes

			container_allied_unit_icon_item = {}

			container_hostile_unit_icon_item = {}
		}
	}
}