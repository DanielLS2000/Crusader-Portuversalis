types MapIcons {
	type icon_unit_quality = icon {
		name = "unit_quality"
		texture = "gfx/interface/icons/army_quality_icon.dds"
		framesize = { 32 32 }
		size = { 22 22 }
		frame = "[UnitItem.GetQualityLevel]"
	}

	type container_supply_icon = widget {
		size = { 35 30 }
		name = "supplies"
		visible = "[UnitItem.ShowSupplyIcon]"

		icon = {
			name = "bg"
			position = { 0 0 }
			size = { 30 30 }
			texture = "gfx/interface/icons/icon_bg_small.dds"
		}

		icon = {
			name = "supply_icon"
			position = { 2 2 }
			framesize = { 30 30 }
			size = { 25 25 }
			frame = "[UnitItem.GetSupplyStateFrame]"
			texture = "gfx/interface/icons/icon_supplies_small.dds"
		}

		icon = {
			name = "supply_trend_icon"
			visible = "[UnitItem.ShowSupplyTrend]"
			position = { 17 10 }
			size = { 20 20 }
			texture = "gfx/interface/icons/symbols/icon_supplies_trend.dds"
		}
	}

	type icon_raider = icon {
		name = "raider"
		visible = "[Army.IsRaidArmy]"
		size = { 30 30 }
		texture = "gfx/interface/icons/map_coa/icon_raider.dds"
		tooltip = "RAID_ARMY_TOOLTIP"
	}

	# UNITS
	type widget_unit_icon_item = widget {
		size = { 114 35 }
		datacontext = "[UnitMapIcon.GetDisplayedUnitItem]"
		allow_outside = yes
		alwaystransparent = no

		tooltipwidget = {
			using = unit_icon_tooltip
		}
		using = tooltip_se

		flowcontainer = {
			position = { -10 0 }

			ignoreinvisible = yes

			container_allied_unit_icon_item = {}

			container_hostile_unit_icon_item = {}
		}
	}

	type container_allied_unit_icon_item = container {
		name = "allied_unit_icon_item"
		datacontext = "[UnitItem.GetArmy]"
		visible = "[Not(Or(UnitItem.IsUnitItemEnemy, UnitItem.IsUnitItemHostile))]"

		state = {
			name = _mouse_hierarchy_enter
			on_start = "[Army.OnMouseEnter]"
		}
		state = {
			name = _mouse_hierarchy_leave
			on_start = "[Army.OnMouseLeave]"
		}

		block "siege_window"
		{
			container_unit_effect_icons = {
				position = { 58 25 }
			}
		}

		block "siege_window"
		{
			container_supply_icon = {}
		}

		button_group = {
			position = { 28 0 }
			
			block "onclick" {
				onclick = "[UnitMapIcon.OnClickArmyGroup( Army.Self )]"
			}

			button_group = {
				position = { 36 0 }

				background = {
					name = "unit_bg_me"
					visible = "[UnitItem.IsUnitItemMine]"
					texture = "gfx/interface/icons/map_icons/army_bg_me.dds"
					framesize = { 164 54 }
					frame = "[UnitItem.GetQualityLevel]"
					margin_left = 10
					margin_right = 15
					margin_top = -2
					margin_bottom = 5
				}

				background = {
					name = "unit_bg_ally"
					visible = "[UnitItem.IsUnitItemAlly]"
					texture = "gfx/interface/icons/map_icons/army_bg_ally.dds"
					framesize = { 164 54 }
					frame = "[UnitItem.GetQualityLevel]"
					margin_left = 10
					margin_right = 15
					margin_top = -2
					margin_bottom = 5
				}

				background = {
					name = "unit_bg_neutral"
					visible = "[UnitItem.IsUnitItemNeutral]"
					texture = "gfx/interface/icons/map_icons/army_bg_neutral.dds"
					framesize = { 164 54 }
					frame = "[UnitItem.GetQualityLevel]"
					margin_left = 10
					margin_right = 15
					margin_top = -2
					margin_bottom = 5
				}

				background = {
					name = "unit_highlight"
					visible = "[Or( UnitItem.ShouldBeHighlighted, UnitItem.IsSelected )]"
					texture = "gfx/interface/icons/map_icons/army_selected.dds"
					margin_left = 10
					margin_right = 15
					margin_top = -2
					margin_bottom = 5
				}

				##### GATHERING VERSIONS ####
				background = {
					visible = "[And(UnitItem.IsGathering, UnitItem.IsUnitItemMine)]"
					using = Unit_Bg_Gathering
				}

				background = {
					visible = "[And(UnitItem.IsGathering, UnitItem.IsUnitItemAlly)]"
					using = Unit_Bg_Gathering
				}

				background = {
					visible = "[And(UnitItem.IsGathering, UnitItem.IsUnitItemNeutral)]"
					using = Unit_Bg_Gathering
				}

				flowcontainer = {
					spacing = 3
					ignoreinvisible = yes

					block "unit_items" {

						text_single = {
							visible = "[GreaterThanOrEqualTo_int32(UnitMapIcon.GetShownCount, '(int32)2')]"
							text = "UNIT_ITEMS"

							default_format = "#medium;bold;glow_color:{0.1,0.1,0.1,1.0}"
							margin_top = 2

							snap_to_pixels = no
						}
					}

					text_single = {
						name = "soldiers"
						text = "[UnitItem.GetCombatStrength]"
						default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
						using = Font_Size_Medium

						snap_to_pixels = no
					}
					block "multi_select" {

						text_single = {
							visible = "[Not( EqualTo_int32(UnitMapIcon.GetShownCount, GetDataModelSize(UnitMapIcon.GetUnitItems)) )]"
							raw_text = "+"
							default_format = "#medium;bold;glow_color:{0.1,0.1,0.1,1.0}"
							margin_top = 2

							snap_to_pixels = no
						}
					}

					widget = {
						size = { 22 22 }

						icon_unit_quality = {
							parentanchor = vcenter
							position = { 0 5 }
						}
					}
				}
			}

			block "siege_window"
			{
				button_group = {
					name = "rally_point"
					size = { 35 35 }

					icon_raider = {
						position = { 0 -22 }
					}

					coat_of_arms_icon = {
						parentanchor = center
						size = { 35 35 }
						coat_of_arms = "[GetPlayer.GetPrimaryTitle.GetTitleCoA.GetTexture('(int32)56','(int32)56')]"
						coat_of_arms_slot = "[GetPlayer.GetPrimaryTitle.GetTitleCoA.GetSlot('(int32)56','(int32)56')]"
						coat_of_arms_mask = "[GetPlayer.GetGovernment.GetRealmMask]"
						
						
						visible = "[And(Not(UnitItem.IsOnlyHiredTroops), UnitItem.IsUnitItemMine)]"

						

						modify_texture = {
							texture = "[GetPlayer.GetGovernment.GetRealmMask]"
							blend_mode = overlay
						}

						coa_realm_overlay = {
							texture = "[GetPlayer.GetGovernment.GetRealmFrame('(int32)28')]"
							framesize = { 35 45 }
							size = { 35 45 }
						}

						coa_realm_topframe = {
							position = { 1 -3 }
							texture ="gfx/interface/coat_of_arms/topframe_28.dds"
							framesize = { 28 35 }
							size = { 34 35 }
							frame = "[GetPlayer.GetPrimaryTitle.GetTierFrame]"
						}
					}
					
					

					button = {
						name = "hired_troops"
						visible = "[And(UnitItem.IsOnlyHiredTroops, UnitItem.IsUnitItemMine)]"
						texture = "gfx/interface/icons/map_icons/county_hired_troops.dds"
						position = { 6 0 }
						size = { 30 30 }
					}
				}
			}
		}

		block "siege_window"
		{
			widget = {
				size = { 28 34 }

				icon = {
					name = "ally_war_icon"
					visible = "[UnitItem.IsUnitItemAlly]"
					texture = "gfx/interface/icons/diplomatic_icons.dds"
					frame = 2
					framesize = { 120 120 }
					size = { 30 30 }

					parentanchor = center
					position = { 30 -18 }
				}

				coa_realm_tiny = {
					position = { 28 -3 }
					datacontext = "[UnitItem.GetOwner]"
					visible = "[Not(UnitItem.IsUnitItemMine)]"
				}
			}
		}
	}

	type container_hostile_unit_icon_item = container {
		datacontext = "[UnitItem.GetArmy]"
		allow_outside = yes
		ignoreinvisible = yes
		visible = "[Or(UnitItem.IsUnitItemEnemy, UnitItem.IsUnitItemHostile)]"

		block "siege_window"
		{
			container_supply_icon = {
				position = { 0 1 }
			}

			container_unit_effect_icons = {
				position = { -2 25 }
			}
		}

		flowcontainer = {
			ignoreinvisible = yes

			flowcontainer = {
				spacing = 3
				ignoreinvisible = yes

				background = {
					name = "unit_bg_enemy"
					visible = "[Not(UnitItem.IsUnitItemHostile)]"
					texture = "gfx/interface/icons/map_icons/army_bg_enemy.dds"
					mirror = horizontal
					framesize = { 164 54 }
					frame = "[UnitItem.GetQualityLevel]"
					margin_left = 10
					margin_right = 15
					margin_top = -2
					margin_bottom = 5
				}

				background = {
					name = "unit_bg_hostile"
					visible = "[UnitItem.IsUnitItemHostile]"
					texture = "gfx/interface/icons/map_icons/army_bg_hostile.dds"
					mirror = horizontal
					framesize = { 164 54 }
					frame = "[UnitItem.GetQualityLevel]"
					margin_left = 10
					margin_right = 15
					margin_top = -2
					margin_bottom = 5
				}

				######### GATHERING VERSIONS ########

				background = {
					visible = "[And(UnitItem.IsGathering, Not(UnitItem.IsUnitItemHostile))]"
					using = Unit_Bg_Gathering
				}

				background = {
					visible = "[And(UnitItem.IsGathering, UnitItem.IsUnitItemHostile)]"
					using = Unit_Bg_Gathering
				}

				widget = {
					size = { 22 22 }

					icon_unit_quality = {
						parentanchor = vcenter
						position = { 0 5 }
					}
				}

				block "unit_items" {
					text_single = {
						visible = "[GreaterThanOrEqualTo_int32(GetDataModelSize(UnitMapIcon.GetUnitItems), '(int32)2')]"
						text = "UNIT_ITEMS"
						default_format = "#medium;bold;glow_color:{0.1,0.1,0.1,1.0}"
						margin_top = 2

						snap_to_pixels = no
					}
				}

				text_single = {
					name = "soldiers"
					text = "[UnitItem.GetCombatStrength]"
					default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
					using = Font_Size_Medium
					snap_to_pixels = no
				}
			}

			block "siege_window"
			{
				widget = {
					size = { 28 34 }

					icon_raider = {
						position = { 2 -22 }
					}

					icon = {
						name = "at_war_icon"
						visible = "[Not(UnitItem.IsUnitItemHostile)]"
						texture = "gfx/interface/icons/map_coa/icon_at_war.dds"

						size = { 45 18 }

						parentanchor = top|hcenter
						position = { 4 -10 }
					}


					coa_realm_tiny = {
						position = { 0 -3 }
						datacontext = "[UnitItem.GetOwner]"
					}
				}

				container_supply_icon = {}
			}
		}
	}

	type container_unit_effect_icons = flowcontainer {
		name = "icon_container"
		ignoreinvisible = yes

		icon = {
			name = "unit_retreating"
			visible = "[UnitItem.IsRetreating]"
			texture = "gfx/interface/icons/map_icons/army_icon_retreating.dds"
		}

		icon = {
			name = "unit_gathering"
			visible = "[UnitItem.ShouldShowGatheringProgress]"
			texture = "gfx/interface/icons/map_icons/army_icon_gathering.dds"
		}

		icon = {
			name = "unit_attrition"
			visible = "[GreaterThan_CFixedPoint( Army.GetArmyAttritionPercentage, '(CFixedPoint)0' )]"
			texture = "gfx/interface/icons/map_icons/army_icon_attrition.dds"
			size = { 23 23 }
		}

		icon = {
			name = "sea_sickness_icon"
			visible = "[UnitItem.HasDisembarkPenalty]"
			size = { 23 23 }
			texture = "gfx/interface/icons/map_icons/army_icon_disembarked.dds"
		}

		icon = {
			name = "at_loot_cap"
			visible = "[Army.IsRaidLootCapped]"
			size = { 23 23 }
			texture = "gfx/interface/icons/map_icons/army_icon_at_loot_cap.dds"
		}

		flowcontainer = {
			margin_top = 7
			margin_left = -2

			progressbar_standard = {
				name = "gathering_progress"
				visible = "[UnitItem.ShouldShowGatheringProgress]"
				size = { 30 8 }
				min = 0
				max = 1
				value = "[Army.GetGatheringProgress]"

				using = Animation_ShowHide_Standard
			}
		}
	}
}