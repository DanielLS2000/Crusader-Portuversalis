
template chat_message
{
	container = {
		block "visible" {
			datacontext = "[GetScriptedGui('mute')]"
			visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('baka', Scope.GetCharacter.GetLiegeEvenWhenDead.MakeScope ).End )]"
		}

		button = {
			size = { 100% 100% }
		}

		onmousehierarchyenter = "[PdxGuiWidget.FindChild('message_options').Show]"
		onmousehierarchyleave = "[PdxGuiWidget.FindChild('message_options').Hide]"

		block "background" {
			background = {
				using = Background_Area_Dark
				margin_top = 2
				margin_bottom = 0
				margin_right = 10
				alpha = 0.7
			}
		}

		portrait_chat_left = {
			datacontext = "[Scope.GetCharacter.GetLiegeEvenWhenDead]"
			alwaystransparent = yes
			position = { 10 0 }
		}

		flowcontainer = {
			direction = vertical
			spacing = -5
			position = { 15 0 }

			flowcontainer = {
				spacing = 5

				text_single = {
					raw_text = "               [Scope.GetCharacter.GetLiegeEvenWhenDead.GetFirstNameNoTooltip]"
					block "name color" {
						default_format = "#explanation_link"
					}
				}

				container = {
					flowcontainer = {
						position = { 0 3 }
						name = "message_options"
						visible = no
						button_edit_text = {
							size = { 18 18 }
							onclick = "[GetVariableSystem.Set('hide_chat_helper', 'yes')]"

							datacontext = "[GetScriptedGui('edit_message')]"
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('message', Scope.GetCharacter.MakeScope ).AddScope('killer', Scope.GetCharacter.GetLiegeEvenWhenDead.MakeScope ).End )]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('message', Scope.GetCharacter.MakeScope ).AddScope('killer', Scope.GetCharacter.GetLiegeEvenWhenDead.MakeScope ).End )]"
							tooltip = "edit_message"
						}
						button_cancel = {
							size = { 20 20 }
							tooltip = "delete_message"
							tintcolor = { 1 0.5 0 1 }
							block "delete_button" {
								datacontext = "[GetScriptedGui('delete_private_message')]"
							}
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('message', Scope.GetCharacter.MakeScope ).AddScope('killer', Scope.GetCharacter.GetLiegeEvenWhenDead.MakeScope ).End )]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('message', Scope.GetCharacter.MakeScope ).AddScope('killer', Scope.GetCharacter.GetLiegeEvenWhenDead.MakeScope ).End )]"
						}
					}
				}
			}

			textbox = {
				multiline = yes
				block "max" {
					maximumsize = { 400 150 }
				}
				elide = right
				autoresize = yes
				block "text" {
					# raw_text = "[Scope.GetCharacter.GetNameNoTooltip]"
					# margin_left = 60
					raw_text = "               [Scope.GetCharacter.GetNameNoTooltip]"
				}
				default_format = "#high"
				block "text margin" {
					margin_bottom = 10
				}
			}
		}
	}
}

template small_chat_message
{
	container = {
		block "visible" {
			datacontext = "[GetScriptedGui('mute')]"
			visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('baka', Scope.GetCharacter.GetLiegeEvenWhenDead.MakeScope ).End )]"
		}

		button = {
			size = { 100% 100% }
		}

		block "visible" {
			onmousehierarchyenter = "[PdxGuiWidget.FindChild('message_options').Show]"
			onmousehierarchyleave = "[PdxGuiWidget.FindChild('message_options').Hide]"
		}

		block "background" {
			background = {
				using = Background_Area_Dark
				margin_top = 2
				margin_bottom = 0
				margin_right = 20
				alpha = 0.5
			}
		}

		portrait_chat_left = {
			datacontext = "[Scope.GetCharacter.GetLiegeEvenWhenDead]"
			alwaystransparent = yes
			position = { 10 0 }
		}

		flowcontainer = {
			direction = vertical
			spacing = -5
			position = { 15 0 }

			flowcontainer = {
				spacing = 5

				text_single = {
					raw_text = "               [Scope.GetCharacter.GetLiegeEvenWhenDead.GetFirstNameNoTooltip]"
					block "name color" {
						default_format = "#explanation_link"
					}
				}

				container = {
					flowcontainer = {
						position = { 0 3 }
						name = "message_options"
						visible = no
						button_edit_text = {
							size = { 18 18 }
							onclick = "[GetVariableSystem.Set('hide_chat_helper', 'yes')]"
							datacontext = "[GetScriptedGui('edit_message')]"
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('message', Scope.GetCharacter.MakeScope ).AddScope('killer', Scope.GetCharacter.GetLiegeEvenWhenDead.MakeScope ).End )]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('message', Scope.GetCharacter.MakeScope ).AddScope('killer', Scope.GetCharacter.GetLiegeEvenWhenDead.MakeScope ).End )]"
							tooltip = "edit_message"
						}
						button_cancel = {
							size = { 20 20 }
							tooltip = "delete_message"
							tintcolor = { 1 0.5 0 1 }
							block "delete_button" {
								datacontext = "[GetScriptedGui('delete_private_message')]"
							}
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('message', Scope.GetCharacter.MakeScope ).AddScope('killer', Scope.GetCharacter.GetLiegeEvenWhenDead.MakeScope ).End )]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('message', Scope.GetCharacter.MakeScope ).AddScope('killer', Scope.GetCharacter.GetLiegeEvenWhenDead.MakeScope ).End )]"
						}
					}
				}
			}

			textbox = {
				multiline = yes
				maximumsize = { 290 150 }
				elide = right
				autoresize = yes
				raw_text = "               [Scope.GetCharacter.GetNameNoTooltip]"
				margin_bottom = 5
				default_format = "#high"
				margin_right = 10
			}
		}
	}
}

types ChatPortraits {
  type portrait_chat_left = widget {
    size = { 50 40 }

    portrait_button = {
		block "transparent" {
			#alwaystransparent = yes
		}
        parentanchor = bottom
				position = { 20 0 }
        size = { 80 100 }
				scale = 0.5
        using = portrait_base
        block "portrait_texture"
        {
            portrait_texture = "[Character.GetPortrait('environment_head', 'camera_head', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
        }
        mask = "gfx/portraits/portrait_mask_head.dds"
        effectname = "NoHighlight"
				tooltip_visible = no

        highlight_icon = {
            name = "prison_bars"
            visible = "[Character.IsImprisoned]"
            size = { 40 46 }
            parentanchor = bottom
            effectname = "NoHighlight"
            texture = "gfx/portraits/portrait_prison_head.dds"

            modify_texture = {
                name = "mask"
                texture = "gfx/portraits/portrait_mask_head.dds"
                spriteType = Corneredstretched
                blend_mode = alphamultiply
            }
        }

      block "portrait_button" {}
    }

    block "coa" {
      coa_realm_tiny = {
		alwaystransparent = yes
		tooltip_visible = no
        visible = "[Character.HasLandedTitles]"
        parentanchor = bottom|left
        position = { 0 1 }
        scale = 0.85
      }
    }
  }
}

@chat_button = 320

window = {
	size = { 100% 100%}
	alwaystransparent = yes
	name = "chat"
	layer = top
	visible = "[And(And(Not(IsFullScreenWindowOpen), Not(IsGameViewOpen('activity_planner'))), Not(IsGameViewOpen('war_overview')))]"

	window = { #chat
		visible = "[And(Not(IsObserver), GetPlayer.IsValid)]"
		movable = yes
		size = { 700 350 }
		alwaystransparent = yes
		parentanchor = bottom|hcenter
		state = {
			name = "reset_chat_position"
			position = { -15 0 }
		}

		position = { -15 0 }
		layer = top

		button_icon = {
			texture = "gfx/interface/icons/flat_icons/button_expand_arrow.dds"
			size = { 30 30 }
			parentanchor = bottom|hcenter
			alpha = 0.5
			visible = no
			tooltip = "show_chat"

			onclick = "[PdxGuiTriggerAllAnimations('show_chat')]"

			state = {
				name = show_chat
				on_start = "[PdxGuiWidget.Hide]"
			}

			state = {
				name = hide_chat
				on_start = "[PdxGuiWidget.Show]"
			}
		}

		widget = { # small chat
			size = { 100% 100% }
			#visible = no
			alwaystransparent = yes

			state = {
				name = show_chat
				on_start = "[PdxGuiWidget.Show]"
			}

			state = {
				name = hide_chat
				on_start = "[PdxGuiWidget.Hide]"
			}

			state = {
				name = smaller_chat
				on_start = "[PdxGuiWidget.Show]"
			}

			state = {
				name = expand_chat
				on_start = "[PdxGuiWidget.Hide]"
			}

			# icon = {
			# 	texture = "gfx/interface/window_event/event_bottom_char_bg.dds"
			# 	size = { 370 70 }
			# 	position = { 50 5 }
			# 	parentanchor = bottom
			# 	alpha = 0
			# }

			widget = { #small chats
				position = { 160 0 }
				size = { 330 100% }
				alwaystransparent = yes

				widget = {#main chat
					size = { 100% 100% }
					position = { 0 0 }
					#datacontext = "[GetScriptedGui('general_chat')]"
					#visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

					name = "main chat"

					scrollarea = {
						size = { 100% 170 }
						alwaystransparent = yes
						position = { 0 145 }

						scrollbarpolicy_vertical = always_off
						scrollbarpolicy_horizontal = always_off

						scrollwidget = {
							flowcontainer = {
								direction = vertical
								parentanchor = bottom

								dynamicgridbox = {
									datamodel = "[GetGlobalList('chat')]"
									ignoreinvisible = yes

									item = {
										container = {
											using = chat_message
											blockoverride "max" {
												maximumsize = { 300 -1 }
											}
											blockoverride "name color" {
												default_format = "#clickable"
											}
											blockoverride "delete_button" {
												datacontext = "[GetScriptedGui('delete_message')]"
											}

											state = {
												name = show_messsage
												alpha = 1
											}

											state = {
												name = quick_hide_message
												alpha = 0
											}

											state = {
												trigger_on_create = yes
												name = disappear
												delay = 8
												alpha = 0
												duration = 1.5
											}
										}
									}
								}

								scrollarea = {
									scrollbarpolicy_vertical = always_off
									scrollbarpolicy_horizontal = always_off
									alwaystransparent = yes

									size = { 430 160 }

									scrollwidget = {

										dynamicgridbox = { # small private chats
											datamodel = "[GetPlayer.MakeScope.GetList('players')]"
											ignoreinvisible = yes
											parentanchor = bottom
											resizeparent = yes

											item = {
												flowcontainer = {
													direction = vertical
													spacing = -4
													ignoreinvisible = yes

													datacontext = "[GetScriptedGui('private_chat')]"
													visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"


													widget = {
														size = { 250 30 }
														name = "header"
														onmousehierarchyleave = "[PdxGuiWidget.AccessChild('reply').Hide]"
														onmousehierarchyenter = "[PdxGuiWidget.AccessChild('reply').Show]"

														onmousehierarchyleave = "[PdxGuiWidget.AccessChild('goto').Hide]"
														onmousehierarchyenter = "[PdxGuiWidget.AccessChild('goto').Show]"
														visible = no

														state = {
															name = hide_header
															alpha = 0
															duration = 1.5
															on_finish = "[PdxGuiWidget.Hide]"
														}

														state = {
															name = show_me
															alpha = 1
															on_start = "[PdxGuiWidget.Show]"
														}

														button = {
															size = { 100% 100% }
															datacontext = "[GetScriptedGui('selected_chat')]"
															onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
															onclick = "[PdxGuiTriggerAllAnimations('expand_chat')]"
															tooltip = "open_room"
														}

														background = {
															using = Background_Area_Dark
															alpha = 0.8
															margin_right = -70
														}

														text_single = {
															raw_text = "[Scope.GetCharacter.GetFirstNameNoTooltip]'s Room"
															default_format = "#explanation_link"
															maximumsize = { 150 -1 }
															elide = right
															#tooltip = "private_room"
															position = { 15 -2 }
															parentanchor = vcenter
														}


														button_icon = {
															name = "goto"
															texture = "gfx/interface/icons/flat_icons/goto.dds"
															size = { 20 20 }
															position = { 150 0 }
															mirror = horizontal
															parentanchor = vcenter
															visible = no
															alwaystransparent = yes
														}

														button_standard = {
															name = "reply"
															position = { 180 3 }
															size = { 70 25 }
															raw_text = "Reply"
															datacontext = "[GetScriptedGui('private_message')]"
															onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
															enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
															visible = no
														}
													}

													scrollarea = {
														#parentanchor = bottom
														maximumsize = { 330 55 }

														scrollbarpolicy_vertical = always_off
														scrollbarpolicy_horizontal = always_off
														alwaystransparent = yes

														scrollwidget = {
															dynamicgridbox = {
																parentanchor = bottom
																resizeparent = yes
																ignoreinvisible = yes
																datamodel = "[Scope.GetCharacter.MakeScope.GetList('private_chat')]"

																item = {
																	container = {
																		name = "message"
																		using = small_chat_message # there were some confusing issues

																		state = {
																			name = show_header
																			trigger_on_create = yes
																			on_start = "[PdxGuiWidget.AccessParent.AccessParent.AccessParent.AccessParent.AccessParent.FindChild('header').TriggerAnimation('show_me')]"
																		}

																		state = {
																			trigger_on_create = yes
																			name = disappear
																			delay = 10
																			alpha = 0
																			duration = 1.5
																			next = hide
																			on_start = "[PdxGuiTriggerAllAnimations('hide_header')]"
																		}

																		state = {
																			name = hide
																			on_start = "[PdxGuiWidget.Hide]"
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}

			widget = {
				# visible = "[Not(GetVariableSystem.Exists('chat'))]"
				size = { 450 33 }
				parentanchor = bottom
				position = { 80 0 }

				button = {
					size = { 100% 100% }
				}

				onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('show_messsage')]"
				onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('quick_hide_message')]"

				flowcontainer = {
					spacing = 5

					widget = {
						size { 30 30 }
					}

					button_icon = {
						shortcut = map_mode_4
						texture = "gfx/interface/icons/flat_icons/button_expand_arrow.dds"
						size = { 30 30 }
						parentanchor = vcenter
						tooltip = "expand_chat"
						tintcolor = { 0.7 0.7 0.7 1 }

						onclick = "[PdxGuiTriggerAllAnimations('expand_chat')]"
						datacontext = "[GetScriptedGui('get_players')]"
						onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					}

					widget = {
						size = { 5 0 }
					}

					button_standard = {
						background = { using = Background_Area }
						shortcut = map_mode_2
						#parentanchor = bottom
						size = { @chat_button 33 }
						#position = { 15 -10 }
						text = "new_message"
						datacontext = "[GetScriptedGui('new_message')]"
						onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					}


					button_cancel = {
						#texture = "gfx/interface/icons/flat_icons/button_expand_arrow.dds"
						size = { 30 30 }
						tooltip = "hide_chat"
						alpha = 0
						state = {
							name = show_messsage
							alpha = 1
						}

						state = {
							name = quick_hide_message
							alpha = 0
						}

						onclick = "[PdxGuiTriggerAllAnimations('hide_chat')]"
					}
				}
			}
		}

		widget = { # big chat
			size = { 100% 100% }
			visible = no
			position = { 0 10 }

			state = {
				name = smaller_chat
				on_start = "[PdxGuiWidget.Hide]"
			}

			state = {
				name = expand_chat
				on_start = "[PdxGuiWidget.Show]"
			}

			scrollarea = { #room buttons
				parentanchor = bottom
				maximumsize = { 100 247 }
				#alwaystransparent = yes
				position = { 7 -50 }

				scrollbar_vertical = {
					using = Scrollbar_Vertical
				}

				background = {
					using = Background_Area_Dark
					margin_left = -30
				}

				scrollbarpolicy_horizontal = always_off

				scrollwidget = {

					dynamicgridbox = { # private room buttons
						resizeparent = yes
						#parentanchor = bottom
						ignoreinvisible = yes

						datamodel = "[GetPlayer.MakeScope.GetList('players')]"

						item = {
							widget = {
								size = { 100 50 }
								onmousehierarchyleave = "[PdxGuiWidget.AccessChild('options').Hide]"

								datacontext = "[GetScriptedGui('can_join_chat')]"
								visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"

								button_tab_vertical = {
									size = { 70 50 }
									parentanchor = right

									datacontext = "[GetScriptedGui('selected_chat')]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
									down = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
									#onclick = "[PdxGuiTriggerAllAnimations('hide_main_chat')]"

									icon = {
										texture = "gfx/interface/colors/white.dds"
										size = { 4 42 }
										position = { 0 4 }
										tintcolor = { 0.35 0.5 0.65 1 }

										datacontext = "[GetScriptedGui('unread_private')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
									}

									icon = {
										texture = "gfx/interface/component_masks/mask_glow.dds"
										size = { 100% 100% }
										position = { 0 0 }
										parentanchor = bottom|hcenter
										alpha = 0.3
										tintcolor = { 0.65 0.4 0.2 1 }

										datacontext = "[GetScriptedGui('selected_chat')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
									}

									portrait_chat_left = {
										parentanchor = center
										position = { -5 0 }
										datacontext = "[Scope.GetCharacter]"
										blockoverride "transparent" {
											alwaystransparent = yes
										}
									}

									onmousehierarchyenter = "[PdxGuiWidget.AccessParent.AccessChild('options').Show]"
								}

								flowcontainer = {
									name = "options"
									position = { -70 0 }
									visible = no
									parentanchor = vcenter|right
									ignoreinvisible = yes

									background = {
										using = Background_Area_Dark
										alpha = 0.5
										margin_left = 5
									}

									button_icon = {
										size = { 30 30 }
										texture = "gfx/interface/icons/flat_icons/cancel.dds"
										parentanchor = vcenter
										tooltip = "leave_room"
										datacontext = "[GetScriptedGui('leave_chat')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
									}

									button_clear = {
										size = { 30 30 }
										parentanchor = vcenter
										tooltip = "clear_messages"
										datacontext = "[GetScriptedGui('clear_private_messages')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
									}
								}
							}
						}
					}
				}
			}

			widget = {
				size = { 100 50 }
				parentanchor = bottom
				position = { 7 -2 }

				onmousehierarchyenter = "[PdxGuiWidget.AccessChild('options').Show]"
				onmousehierarchyleave = "[PdxGuiWidget.AccessChild('options').Hide]"

				button_tab_vertical = {
					size = { 70 50 }
					parentanchor = right
					datacontext = "[GetScriptedGui('general_chat')]"
					down = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
					onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

					background = {
						using = Background_Area_Dark
						margin_right = 2
					}

					button_encyclopedia_small = {
						size = { 45 45 }
						parentanchor = center
						position = { 5 0 }
						alwaystransparent = yes
						enabled = "[Not(ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ))]"
					}

					icon = {
						texture = "gfx/interface/colors/white.dds"
						size = { 4 42 }
						position = { 0 4 }
						tintcolor = { 0.65 0.5 0.3 1 }

						tooltip = "unread_messages"
						datacontext = "[GetScriptedGui('unread')]"
						visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
					}

					icon = {
						texture = "gfx/interface/component_masks/mask_glow.dds"
						size = { 100% 100% }
						position = { 3 0 }
						parentanchor = bottom|hcenter
						alpha = 0.2
						tintcolor = { 0.65 0.4 0.2 1 }

						datacontext = "[GetScriptedGui('general_chat')]"
						visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
					}

					#onclick = "[PdxGuiTriggerAllAnimations('show_main_chat')]"
				}

				flowcontainer = {
					name = "options"
					position = { -70 0 }
					visible = no
					parentanchor = vcenter|right
					ignoreinvisible = yes

					background = {
						using = Background_Area_Dark
						alpha = 0.5
						margin_left = 5
					}

					button_clear = {
						size = { 30 30 }
						parentanchor = vcenter
						tooltip = "clear_messages"
						datacontext = "[GetScriptedGui('clear_messages')]"
						onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						visible = "[IsHost]"
					}
				}
			}

			widget = { #chats
				position = { 102 0 }
				size = { 430 100% }

				background = {
					using = Background_Area_Dark_Border
					margin_left = 0
					margin_right = 3
				}

				background = { using = Background_Area_Border_Solid alpha = 0.5 }

				dynamicgridbox = { #private chats
					datamodel = "[GetPlayer.MakeScope.GetList('players')]"
					ignoreinvisible = yes
					position = { 0 5 }

					item = {
						flowcontainer = {
							direction = vertical

							datacontext = "[GetScriptedGui('selected_chat')]"
							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"

							widget = {
								size = { 330 30 }

								background = {
									using = Background_Area_Dark
									alpha = 0.5
								}

								flowcontainer = {
									margin_left = 15
									spacing = 5

									text_single = {
										raw_text = "[Scope.GetCharacter.GetFirstNameNoTooltip]'s Private Room"
										default_format = "#explanation_link"
										maximumsize = { 150 -1 }
										elide = right
										tooltip = "private_room"
									}

									overlappingitembox = {
										#flipdirection = yes
										size = { 170 30 }
										#spacing = 5
										datamodel = "[Scope.GetCharacter.MakeScope.GetList('private_chat_members')]"

										item = {
											portrait_chat_left = {
												datacontext = "[Scope.GetCharacter]"
												size = { 60 40 }
												scale = 0.6
												tooltip = "[Scope.GetCharacter.GetFullNameOrMeRegnal]"
											}
										}
									}
								}
							}

							widget = {
								size = { 0 15 }
							}

							scrollarea = {
								#parentanchor = bottom
								size = { 430 245 }

								scrollbar_vertical = {
									using = Scrollbar_Vertical
								}
								scrollbarpolicy_horizontal = always_off

								scrollwidget = {
									dynamicgridbox = {
										parentanchor = bottom
										datamodel = "[Scope.GetCharacter.MakeScope.GetList('private_chat')]"

										item = {
											container = {
												using = chat_message
												blockoverride "text margin" {}
												blockoverride "text" {
													raw_text = "[Scope.GetCharacter.GetNameNoTooltip]"
													margin_left = 60
												}
												blockoverride "background" {}
												blockoverride "text margin" {}
											}
										}
									}
								}
							}

							widget = {
								size = { 0 12 }
							}

							container = {
								button_standard = {
									size = { 320 33 }
									position = { 60 0 }
									shortcut = map_mode_2
									raw_text = "private_message"
									datacontext = "[GetScriptedGui('private_message')]"
									onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
									enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('host', Scope.GetCharacter.MakeScope ).End )]"
								}
							}
						}
					}
				}

				widget = {#main chat
					size = { 100% 100% }
					position = { 0 0 }
					datacontext = "[GetScriptedGui('general_chat')]"
					visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

					name = "main chat"

					scrollarea = {
						position = { 0 10 }
						size = { 100% 285 }

						scrollbar_vertical = {
							using = Scrollbar_Vertical
						}

						scrollbarpolicy_horizontal = always_off

						scrollwidget = {
							dynamicgridbox = {
								parentanchor = bottom
								datamodel = "[GetGlobalList('chat')]"

								item = {
									container = {
										using = chat_message
										blockoverride "background" {}
										blockoverride "name color" {
											default_format = "#clickable"
										}
										blockoverride "delete_button" {
											datacontext = "[GetScriptedGui('delete_message')]"
										}
										blockoverride "text margin" {}
										blockoverride "text" {
											raw_text = "[Scope.GetCharacter.GetNameNoTooltip]"
											margin_left = 60
										}
									}
								}
							}
						}
					}

					widget = {
						size = { 0 33 }
					}
				}
			}

			flowcontainer = {
				ignoreinvisible = yes
				parentanchor = bottom
				position = { 115 -10 }
				spacing = 5

				button_icon = {
					shortcut = close_window
					shortcut = map_mode_4
					texture = "gfx/interface/icons/flat_icons/button_expand_arrow.dds"
					mirror = vertical
					size = { 30 30 }
					parentanchor = vcenter
					alpha = 0.7
					tooltip = "minimize_chat"

					onclick = "[PdxGuiTriggerAllAnimations('smaller_chat')]"
					onrightclick = "[PdxGuiTriggerAllAnimations('reset_chat_position')]"
					button_ignore = none
				}

				widget = {
					size = { 5 0 }
				}

				button_standard = {
					size = { @chat_button 33 }
					raw_text = "new_message"
					shortcut = map_mode_2
					datacontext = "[GetScriptedGui('new_message')]"
					onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				}

				#TODO: redo this whole thing
				widget = {
					size = { @chat_button 33 }
					datacontext = "[GetScriptedGui('new_message')]"
					visible = "[Not(ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
				}

				widget = {
					size = { 0 0 }
				}

				#TODO: redo with gui variables
				button_me = {
					# texture = "gfx/interface/icons/flat_icons/mapmode_players.dds"
					size = { 35 32 }
					name = "hide_players"
					tooltip = "hide_players"
					mirror = horizontal
					#visible = no

					onclick = "[PdxGuiWidget.AccessParent.AccessParent.AccessChild('players').Hide]"
					onclick = "[PdxGuiWidget.AccessParent.AccessChild('show_players').Show]"
					onclick = "[PdxGuiWidget.Hide]"
				}

				button_me = {
					# texture = "gfx/interface/icons/flat_icons/mapmode_players.dds"
					size = { 35 32 }
					parentanchor = vcenter
					name = "show_players"
					tooltip = "show_players"
					visible = no

					onclick = "[PdxGuiWidget.AccessParent.AccessParent.AccessChild('players').Show]"
					onclick = "[PdxGuiWidget.AccessParent.AccessChild('hide_players').Show]"
					onclick = "[PdxGuiWidget.Hide]"
				}
			}

			scrollarea = { # players
				name = "players"
				parentanchor = bottom
				size = { 155 0 }
				position = { 527 -5 }

				# onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation('larger')]"
				# onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation('smaller')]"

				# state = {
				# 	name = larger
				# 	size = { 170 350 }
				# }
				#
				# state = {
				# 	name = smaller
				# 	delay = 2
				# 	size = { 60 350 }
				# }

				background = {
					using = Background_Area_Dark
					margin_top = 5
				}
				maximumsize = { -1 340 }

				scrollbar_vertical = {
					using = Scrollbar_Vertical
				}

				scrollbarpolicy_horizontal = always_off

				scrollwidget = {

					dynamicgridbox = {
						resizeparent = yes
						parentanchor = bottom

						datamodel = "[GetPlayer.MakeScope.GetList('players_right')]"

						item = {
							widget = {
								size = { 155 40 }

								portrait_chat_left = {
									parentanchor = vcenter
									datacontext = "[Scope.GetCharacter]"
									size = { 50 35 }
									scale = 0.8
									position = { 4 0 }
									tooltip = "[Scope.GetCharacter.GetFullNameOrMeRegnal]"
									#onmousehierarchyenter = "[PdxGuiWidget.AccessParent.AccessChild('options2').Show]"
								}

								#onmousehierarchyleave = "[PdxGuiWidget.AccessChild('options2').Hide]"

								flowcontainer = {
									name = "options2"
									position = { 55 0 }
									#visible = no
									parentanchor = vcenter
									ignoreinvisible = yes

									# background = {
									# 	using = Background_Area_Dark
									# 	alpha = 0.5
									# 	margin_left = 5
									# }

									button_icon = {
										size = { 30 30 }
										texture = "gfx/interface/icons/flat_icons/outliner.dds"
										tooltip = "send_letter"

										datacontext = "[GetScriptedGui('first_letter')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('letter_recipient', Scope.GetCharacter.MakeScope ).End )]"
										onclick = "[PdxGuiTriggerAllAnimations('hide_letter')]"

										state = {
											name = hide_letter
											on_start = "[PdxGuiWidget.Hide]"
										}
									}

									button_icon = {
										size = { 30 30 }
										texture = "gfx/interface/icons/flat_icons/outliner.dds"
										tooltip = "send_letter"
										visible = no
										state = {
											name = hide_letter
											on_start = "[PdxGuiWidget.Show]"
										}

										datacontext = "[GetScriptedGui('letter')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('letter_recipient', Scope.GetCharacter.MakeScope ).End )]"
									}

									button_icon = {
										size = { 25 25 }
										texture = "gfx/interface/icons/flat_icons/kick_player.dds"
										parentanchor = vcenter
										tooltip = "kick_player"

										datacontext = "[GetScriptedGui('kick_from_my_chat')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('member', Scope.GetCharacter.MakeScope ).End )]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('member', Scope.GetCharacter.MakeScope ).End )]"
									}

									button_icon = {
										size = { 30 30 }
										texture = "gfx/interface/icons/flat_icons/add_character.dds"
										parentanchor = vcenter
										tooltip = "invite_player"

										datacontext = "[GetScriptedGui('add_to_my_chat')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('member', Scope.GetCharacter.MakeScope ).End )]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('member', Scope.GetCharacter.MakeScope ).End )]"
									}

									button_icon = {
										size = { 25 25 }
										texture = "gfx/interface/icons/flat_icons/play_sound.dds"
										parentanchor = vcenter
										tooltip = "mute_player"

										datacontext = "[GetScriptedGui('mute')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('baka', Scope.GetCharacter.MakeScope ).End )]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('baka', Scope.GetCharacter.MakeScope ).End )]"
									}

									button_icon = {
										size = { 25 25 }
										texture = "gfx/interface/icons/flat_icons/play_sound.dds"
										parentanchor = vcenter
										tintcolor = { 1 0 0 0.6 }
										tooltip = "unmute_player"

										datacontext = "[GetScriptedGui('unmute')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('baka', Scope.GetCharacter.MakeScope ).End )]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('baka', Scope.GetCharacter.MakeScope ).End )]"
									}
								}
							}
						}
					}
				}
			}
		}
	}

	window = { #observer chat
		visible = "[IsObserver]"
		size = { 350 350 }
		parentanchor = bottom|hcenter
		position = { 0 -5 }
		movable = yes
		alwaystransparent = yes

		flowcontainer = {
			ignoreinvisible = yes
			parentanchor = bottom

			flowcontainer = {
				ignoreinvisible = yes
				parentanchor = bottom

				button_cancel = {
					size = { 30 30 }
					tooltip = "hide_chat"

					onclick = "[PdxGuiTriggerAllAnimations('hide_chat')]"

					state = {
						name = hide_chat
						on_start = "[PdxGuiWidget.Hide]"
					}

					state = {
						name = show_chat
						on_start = "[PdxGuiWidget.Show]"
					}
				}

				button_icon = {
					visible = no
					texture = "gfx/interface/icons/flat_icons/button_expand_arrow.dds"
					size = { 30 30 }
					tooltip = "show_chat"
					tintcolor = { 0.7 0.7 0.7 1 }

					onclick = "[PdxGuiTriggerAllAnimations('show_chat')]"

					state = {
						name = hide_chat
						on_start = "[PdxGuiWidget.Show]"
					}

					state = {
						name = show_chat
						on_start = "[PdxGuiWidget.Hide]"
					}
				}

				button_icon = {
					texture = "gfx/interface/icons/flat_icons/button_expand_arrow.dds"
					size = { 30 30 }
					tooltip = "expand_chat"
					tintcolor = { 0.7 0.7 0.7 1 }

					onclick = "[PdxGuiTriggerAllAnimations('expand_chat')]"

					state = {
						name = minimize_chat
						on_start = "[PdxGuiWidget.Show]"
					}

					state = {
						name = expand_chat
						on_start = "[PdxGuiWidget.Hide]"
					}
				}

				button_icon = {
					visible = no
					texture = "gfx/interface/icons/flat_icons/button_expand_arrow.dds"
					size = { 30 30 }
					tooltip = "minimize_chat"
					tintcolor = { 0.7 0.7 0.7 1 }
					mirror = vertical
					onrightclick = "[PdxGuiTriggerAllAnimations('reset_chat_position')]"
					button_ignore = none

					onclick = "[PdxGuiTriggerAllAnimations('minimize_chat')]"

					state = {
						name = expand_chat
						on_start = "[PdxGuiWidget.Show]"
					}

					state = {
						name = minimize_chat
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}

			flowcontainer = {
				ignoreinvisible = yes
				parentanchor = bottom

				state = {
					name = hide_chat
					on_start = "[PdxGuiWidget.Hide]"
				}

				state = {
					name = show_chat
					on_start = "[PdxGuiWidget.Show]"
				}

				scrollarea = {
					alwaystransparent = yes#
					position = { 0 0 }
					size = { 350 350 }

					state = {
						name = expand_chat
						on_start = "[PdxGuiWidget.Hide]"
					}

					state = {
						name = minimize_chat
						on_start = "[PdxGuiWidget.Show]"
					}

					scrollbarpolicy_vertical = always_off
					scrollbarpolicy_horizontal = always_off

					scrollwidget = {
						dynamicgridbox = {
							parentanchor = bottom
							datamodel = "[GetGlobalList('chat')]"

							item = {
								container = {
									using = small_chat_message
									blockoverride "visible" {}
									blockoverride "name color" {
										default_format = "#clickable"
									}

									state = {
										name = show_messsage
										alpha = 1
									}

									state = {
										name = quick_hide_message
										alpha = 0
									}

									state = {
										trigger_on_create = yes
										name = disappear
										delay = 8
										alpha = 0
										duration = 1.5
									}
								}
							}
						}
					}
				}

				scrollarea = {
					visible = no
					position = { 0 0 }
					size = { 350 350 }

					state = {
						name = expand_chat
						on_start = "[PdxGuiWidget.Show]"
					}

					state = {
						name = minimize_chat
						on_start = "[PdxGuiWidget.Hide]"
					}

					scrollbar_vertical = {
						using = Scrollbar_Vertical
					}
					scrollbarpolicy_horizontal = always_off

					background = {
						using = Background_Area_Dark
						margin = { 0 5 }
					}

					scrollwidget = {
						dynamicgridbox = {
							parentanchor = bottom
							datamodel = "[GetGlobalList('chat')]"

							item = {
								container = {
									using = small_chat_message
									blockoverride "visible" {}
									blockoverride "background" {}
									blockoverride "name color" {
										default_format = "#clickable"
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
