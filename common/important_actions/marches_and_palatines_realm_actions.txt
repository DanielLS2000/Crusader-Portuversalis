action_grant_vassal_to_rightful_liege = {
	priority = 800
	combine_into_one = yes

	check_create_action = {
		every_vassal = {
			# Evaluate our base conditions of if the vassal is not our de jure
			limit = {
				save_temporary_scope_as = vassal_to_transfer
		
				highest_held_title_tier > tier_barony
				is_busy_in_events_localised = yes

				NOT = { is_at_war_with = root }

				NOT = {
					scope:vassal_to_transfer = {
						any_vassal_or_below = {
							is_at_war_with = root
						}
					}
				}
				NOT = {
					primary_title.de_jure_liege.holder = liege
				}
				NOT = {
					root.diarch ?= this
				}
				NOR = {
					vassal_contract_has_flag = has_castellan_contract
					vassal_contract_has_flag = has_palatinate_contract
					vassal_contract_has_flag = has_landgraviate_contract
					vassal_contract_has_flag = vassal_contract_imperial_immediacy
				}
			}
			
			# Then we try to see if we can get someone to grant them to
			save_scope_as = vassal_to_transfer

			# Either the actual de jure holder
			if = {
				limit = {
					exists = primary_title.de_jure_liege.holder
					
					primary_title.de_jure_liege.holder = {
						liege = scope:vassal_to_transfer.liege

						is_busy_in_events_localised = yes
						NOR = {
							is_at_war_with = root
							is_at_war_with = scope:vassal_to_transfer
						}
					}
				}
				try_create_important_action = {
					important_action_type = action_grant_vassal_to_rightful_liege
					actor = root
					recipient = this.primary_title.de_jure_liege.holder
					secondary_actor = this
				}
			}

			# Or the liege of the de jure holder
			if = {
				limit = {
					exists = primary_title.de_jure_liege.holder.liege

					primary_title.de_jure_liege.holder.liege = {
						NOT = { this = root }
						liege = scope:vassal_to_transfer.liege

						is_busy_in_events_localised = yes
						NOT = {
							is_at_war_with = root
						}
					}
				}
				try_create_important_action = {
					important_action_type = action_grant_vassal_to_rightful_liege
					actor = root
					recipient = this.primary_title.de_jure_liege.holder.liege
					secondary_actor = this
				}
			}
		}
	}

	effect = {
		open_interaction_window = {
			interaction = grant_vassal_interaction
			actor = scope:actor
			recipient = scope:recipient
			secondary_actor = scope:secondary_actor
		}
	}
}