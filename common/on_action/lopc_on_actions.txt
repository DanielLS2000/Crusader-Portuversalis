lopc_check_in_court_on_action = {
	trigger = {
		is_lopc_adventurer_courtier = yes
	}
	effect = {
		random_relation = {
			type = lopc_employer
			save_scope_as = courtier_x_liege
		}
		if = { # If boss has become unlanded and still a courtier for some reason, leave court (changed to ruler to allow being employed by landless)
			limit = { 
				scope:courtier_x_liege = {
					is_ruler = no
				}
			}
			lopc_leave_court_scripted_effect = yes
		}
		else_if = { # If became vassal of someone is not their employer
			limit = { 
				is_independent_ruler = no
				NOT = { root.liege = scope:courtier_x_liege } 
			}
			lopc_get_independence = yes
		}
		else_if = { # If boss landed and you're not at the capital, boss will give warning
			limit = { 
				NOT = { # Won't send if you are the acting regent, a noble family, or have 100 opinion
					OR = {
						is_diarch_of_target = scope:courtier_x_liege
						is_designated_diarch = yes
					}
					any_held_title = { is_noble_family_title = yes }
					scope:courtier_x_liege = {
						opinion = {
							target = root
							value >= 100
						}
					}
				}
				NOR = { 
					location = scope:courtier_x_liege.capital_province 
					
					# Also check not in/commanding one of lieges armies (because of another mod)
					commanding_army.army_owner = scope:courtier_x_liege
					knight_army.army_owner = scope:courtier_x_liege
				}
			}
			trigger_event = { id = lopc_event.1001 }
		}
	}
}

quarterly_playable_pulse = {
	on_actions = {
		lopc_quarterly_pulse
	}
}
lopc_quarterly_pulse = {
	trigger = {
		is_lopc_adventurer_courtier = yes
	}
	random_events = { # Random Courtier Events - want lots
		chance_to_happen = 100
		#10 = lopc_event.2001	# Hidden Diplomacy test. Send toast for success/failure.
		#10 = lopc_event.2002	# Hidden Stewardship test. Send toast for success/failure.
		#delay = { days = { 2 6 } }
		#10 = lopc_event.2003	# Hidden Learning test. Send toast for success/failure.
		#10 = lopc_event.2004	# Hidden Martial test. Send toast for success/failure.
		#delay = { days = { 2 6 } }
		#10 = lopc_event.2005	# Employer asks you to take on more responsibility. Stress gain for prestige, or stress loss and opinion loss.
		#10 = lopc_event.2006	# Overhear secret at court.
		#delay = { days = { 2 6 } }
		#10 = lopc_event.2007	# Stressful day. Send toast for stress gain.
		#10 = lopc_event.2008	# Chance to bond with other member of the court.
		#delay = { days = { 2 6 } }
		#10 = lopc_event.2009	# Overhear opportunity. Send toast and generate random contract in area.
		#10 = lopc_event.2010	# Overhear opportunity. Either force a criminal job to generate in province (and give your liege a debuff to scheme defence) or don't (piety
		
		10 = lopc_event.2000
		10 = lopc_event.2001
		10 = lopc_event.2002
		10 = lopc_event.2003
		10 = lopc_event.2004
		10 = lopc_event.2005
		10 = lopc_event.2006
		10 = lopc_event.2007
		10 = lopc_event.2008
		10 = lopc_event.2009
		10 = lopc_event.2010
		10 = lopc_event.2011
		10 = lopc_event.2012
		10 = lopc_event.2013
		10 = lopc_event.2014
		10 = lopc_event.2015
		10 = lopc_event.2016
		10 = lopc_event.2017
		10 = lopc_event.2018
		10 = lopc_event.2019
		10 = lopc_event.2020
		10 = lopc_event.2021
		10 = lopc_event.2022
		10 = lopc_event.2023
		10 = lopc_event.2024
		10 = lopc_event.2025
		10 = lopc_event.2026
		10 = lopc_event.2027
		10 = lopc_event.2028
		10 = lopc_event.2029
		10 = lopc_event.2030
		10 = lopc_event.2031
		10 = lopc_event.2032
		10 = lopc_event.2040
		10 = lopc_event.2041
		10 = lopc_event.2042
		10 = lopc_event.2043
		10 = lopc_event.2044
		10 = lopc_event.2045
		10 = lopc_event.2046
		10 = lopc_event.2047
		10 = lopc_event.2048
		10 = lopc_event.2049
		200 = 0					# No event
	}
}
yearly_playable_pulse = {
	on_actions = {
		lopc_yearly_events_on_action 
	}
}

lopc_yearly_events_on_action = {
	trigger = {
		is_lopc_adventurer_courtier = yes
	}
	random_events = { # Random Courtier Events - want lots
		chance_to_happen = 50
		10 = lopc_event.2050
		10 = lopc_event.2051
		#10 = lopc_event.2052
		#10 = lopc_event.2053
		10 = lopc_event.2054
		#10 = 0					# No event
	}
}
 
quarterly_playable_pulse = {
	on_actions = {
		lopc_check_in_court_on_action
	}
}

lopc_courtier_x_gains_title_on_action = {
	trigger = {
		scope:title = { is_landless_type_title = no }
		OR = {
			is_lopc_adventurer_courtier = yes
			is_lopc_adventurer_special_courtier = yes
		}
	}
	effect = {
		random_relation = {
			limit = { is_alive = yes }
			type = lopc_employer
			save_scope_as = courtier_x_liege
		}
		if = { 
			limit = { # If they have a noble family head title and their employer is still their liege, pass
				any_held_title = { is_noble_family_title = yes }
				liege = scope:courtier_x_liege
			}
		}
		else = {
			lopc_leave_court_scripted_effect = yes # Stay as vassal of boss? Saves me having to determine whether bss has given you land? 
		}
	}
}

on_title_gain = {
	on_actions = {
		lopc_courtier_x_gains_title_on_action
	}
}

lopc_courtier_x_liege_lost_titles_on_action = {
	trigger = {
		any_relation = {
			type = lopc_courtier
			is_alive = yes
		}
	}	
	
	effect = {
		save_scope_as = courtier_x_liege
		if = { # If no land, new ruler might offer a job
			limit = { 
				is_landed = no
				#is_landless_ruler = no				
			}
			every_relation = {
				type = lopc_courtier
				limit = { 
					NOT = {
						this = scope:courtier_x_liege
					}
				}
				if = {
					limit = { is_lopc_adventurer_special_courtier = yes } # if special court, just set new holder as new employer
					remove_relation_lopc_employer = root
					set_relation_lopc_employer  = { 
						custom_description = set_relation_lopc_employer_desc
						target = scope:new_holder 
					}
				}
				else = { # else have new ruler offer					
					lopc_leave_court_scripted_effect = yes
					scope:new_holder = { save_scope_as = courtier_x_liege }
					trigger_event = { id = lopc_event.0002 }
				}
			}
		}
		else_if = { # Else if still have land but lost highest title, rerun join court event
			limit = { 
				is_landed = yes
				highest_held_title_tier < scope:title.tier
				#is_landless_adventurer = no			
			}
			#add_prestige = 10000
			every_relation = {
				type = lopc_courtier
				limit = {
					NOT = {
						this = scope:courtier_x_liege
					}
				}
				trigger_event = { id = lopc_event.0001 }
			}
		}
		else = { # Else they if still have land, your boss (previous holder of title) should stay the same
		
		}
	}
}

on_title_lost = {
	on_actions = {
		lopc_courtier_x_liege_lost_titles_on_action
	}
}

lopc_on_inheritance_on_action = {
    trigger = {
		NOT = {has_character_flag = lopc_courtiers_inherited}
		scope:previous_holder = { 
			any_relation = {
				type = lopc_courtier
				is_alive = yes
			}
        }
	}

    effect = {
        root = {
            save_scope_as = courtier_x_liege
			add_character_flag = lopc_courtiers_inherited
        }

        scope:previous_holder = {
			every_relation = {
				type = lopc_courtier
				limit = {
					NOT = {
						has_relation_lopc_employer = scope:courtier_x_liege
						this = scope:courtier_x_liege
						#has_character_flag = lopc_courtiers_inherited
					}
				}
				if = {
					limit = { is_lopc_adventurer_special_courtier = yes } # if special court, just set new holder as new employer
					remove_relation_lopc_employer = root
					set_relation_lopc_employer  = { 
						custom_description = set_relation_lopc_employer_desc
						target = scope:new_holder 
					}
				}
				else = { # else have new ruler offer			
					remove_relation_lopc_employer = scope:previous_holder
					#set_relation_lopc_employer = scope:courtier_x_liege
					lopc_leave_court_scripted_effect = yes
					trigger_event = { id = lopc_event.0002 }
				}
			}
		}
	}
}
on_title_gain_inheritance = {
    on_actions = {
        lopc_on_inheritance_on_action
    }
}

lopc_knight_commander_on_action = {
	trigger = {
		is_lopc_adventurer_courtier = yes
		OR = {
			root.commanding_army.army_owner = scope:courtier_x_liege
			root.knight_army.army_owner = scope:courtier_x_liege
		}
	}
	if = {
		limit = { is_commanding_army = yes }
		trigger_event = { id = lopc_event.2200 }
	}
	else = {
		trigger_event = { id = lopc_event.2201 }
	}
}
# Prestige toast if commanding liege's army or a knight in one - might make event(s) later
yearly_playable_pulse = {
    on_actions = {
        lopc_knight_commander_on_action
    }
}

# Caravan Master events
lopc_caravan_master_start_on_action = {
	trigger = {
		#current_travel_plan = {
		#	any_entourage_character = {
		#		count >= 1
		#		has_court_position = travel_leader_court_position
		#		is_available_travelling_adult = yes
		#		is_ai = no
		#		NOT = { this = root }
		#		#has_relation_lopc_employer = root
		#	}
		#}
	}
	effect = {
		current_travel_plan = {
			random_entourage_character = {
				limit = { 
					has_court_position = travel_leader_court_position
					is_ai = no
				}
				save_scope_as = lopc_caravan_master
				trigger_event = {
					id = lopc_event.2300
					days = 2
				}
			}
		}
	}
}
lopc_caravan_master_end_on_action = {
	trigger = {
		current_travel_plan = {
			any_entourage_character = {
				count >= 1
				has_court_position = travel_leader_court_position
				is_available_travelling_adult = yes
				is_ai = no
				NOT = { this = root }
				#has_relation_lopc_employer = root
			}
		}
	}
	effect = {
		current_travel_plan = {
			random_entourage_character = {
				limit = { 
					has_court_position = travel_leader_court_position
					is_ai = no
				}
				save_scope_as = lopc_caravan_master
				trigger_event = {
					id = lopc_event.2301
				}
			}
		}
	}
}
on_travel_plan_start = {
	on_actions = {
		lopc_caravan_master_start_on_action
	}
}
on_travel_plan_complete = {
    on_actions = {
        lopc_caravan_master_end_on_action
    }
}

on_holy_order_hired = {
    on_actions = {
        lopc_holy_order_hired_courtier_on_action
    }
}

lopc_holy_order_hired_courtier_on_action = {
	effect = {
		save_scope_as = holy_order
		scope:holy_order.leader = {
			every_relation = {
				type = lopc_courtier
				trigger_event = {
					id = lopc_event.2410
					days = 1
				}
			}
		}
	}
}

#on_mercenary_company_hired = {
#    on_actions = {
#        lopc_mercenary_company_hired_courtier_on_action
#    }
#}

#lopc_mercenary_company_hired_courtier_on_action = {
#	effect = {
#		save_scope_as = mercenary_company
#		scope:mercenary_company.leader = {
#			every_relation = {
#				type = lopc_courtier
#				trigger_event = {
#					id = lopc_event.2411
#					days = 1
#				}
#			}
#		}
#	}
#}