namespace = lopc_scheme_event

# Court Service Scheme
lopc_scheme_event.0001 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_character = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner
				#DISCOVERY ROLL
				#save_scope_value_as = {
				#	name = discovery_chance
				#	value = {
				#		value = 100
				#		subtract = scope:scheme.scheme_secrecy
				#	}
				#}
				#random = {
				#	chance = scope:discovery_chance
				#	save_scope_value_as = {
				#		name = scheme_discovered
				#		value = yes
				#	}
				#}

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0002
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0003
						days = 1
					}	
				}
			}
		}
	}
}

#Success - Get prestige and gold based on tier of target. target also gets prestige.
lopc_scheme_event.0002 = {
	type = character_event
	title = lopc_scheme_event.0002.t
	desc = {
		desc = lopc_scheme_event.0002.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = scheme
	}
	lower_right_portrait = scope:target

	immediate = {
		add_prestige = 100
	}

	option = {
		name = lopc_scheme_event.0002.a
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
}

#Failure - gain stress and lose target opinion
lopc_scheme_event.0003 = {
	type = character_event
	title = lopc_scheme_event.0003.t
	desc = {
		desc = lopc_scheme_event.0003.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = disappointed
	}
	lower_right_portrait = scope:target

	immediate = {
		lopc_failed_service_scheme_effect = {
			TARGET = scope:target
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# Alms Service Scheme
lopc_scheme_event.0011 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_title = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0012
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0013
						days = 1
					}	
				}
			}
		}
	}
}

#Success
lopc_scheme_event.0012 = {
	type = character_event
	title = lopc_scheme_event.0012.t
	desc = {
		desc = lopc_scheme_event.0012.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = scheme
	}
	lower_right_portrait = courtier_x_liege

	immediate = {
		# Trigger the response event for the target
		scope:target.holder = {
			save_scope_as = courtier_x_liege 
		}
		add_piety = 150
	}

	option = {
		name = lopc_scheme_event.0002.a
		scope:target = {
			add_county_modifier = {
				modifier = lopc_placated_commoners
				months = 3
			}
		}
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target.holder
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
	after = { # Target response
	#	scope:target = {
	#		trigger_event = scheme_critical_moments.1134
	#	}
	}
}

#Failure
lopc_scheme_event.0013 = {
	type = character_event
	title = lopc_scheme_event.0013.t
	desc = {
		desc = lopc_scheme_event.0013.desc
		#first_valid = {
			#triggered_desc = {
				#trigger = {
				#	exists = scope:scheme_discovered
				#}
				#desc = scheme_critical_moments.1133.desc_discovered
			#}
			#desc = scheme_critical_moments.1133.desc_secret
		#}
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = disappointed
	}
	lower_right_portrait = scope:target

	immediate = {
		scope:target.holder = {
			save_scope_as = courtier_x_liege 
		}
		lopc_failed_service_scheme_effect = {
			TARGET = scope:courtier_x_liege
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# Bodyguard Service Scheme
lopc_scheme_event.0021 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_character = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0022
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0023
						days = 1
					}	
				}
			}
		}
	}
}

#Success
lopc_scheme_event.0022 = {
	type = character_event
	title = lopc_scheme_event.0022.t
	desc = {
		desc = lopc_scheme_event.0022.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = scheme
	}
	lower_right_portrait = scope:target

	immediate = {
		# Trigger the response event for the target
		scope:target = {
			add_character_modifier = {
				modifier = lopc_improved_scheme_defence
				years = 1
			}
		}
	}

	option = {
		name = lopc_scheme_event.0002.a
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target
		}
		dynasty ?= {
			add_dynasty_prestige = 10
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
}

#Failure
lopc_scheme_event.0023 = {
	type = character_event
	title = lopc_scheme_event.0023.t
	desc = {
		desc = lopc_scheme_event.0023.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = disappointed
	}
	lower_right_portrait = scope:target

	immediate = {
		lopc_failed_service_scheme_effect = {
			TARGET = scope:target
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# Champion Service Scheme
lopc_scheme_event.0031 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_character = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0032
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0033
						days = 1
					}	
				}
			}
		}
	}
}

#Success - A duel starts
lopc_scheme_event.0032 = {
	type = character_event
	title = lopc_scheme_event.0032.t
	desc = {
		desc = lopc_scheme_event.0032.desc
	}
	theme = diplomacy
	right_portrait = {
		character = root
		animation = personality_bold
	}
	left_portrait = {
		character = scope:duel_target
		animation = aggressive_sword
	}
	lower_right_portrait = scope:target

	immediate = {
		# Trigger the response event for the target
		scope:target = {
			random_knight = {
				limit = { NOT = { this = root } }
				save_scope_as = duel_target
			}
		}
	}

	option = {
		name = lopc_scheme_event.0032.a
		#lopc_successful_service_scheme_effect = {
		#	TARGET = scope:target
		#}
		configure_start_single_combat_effect = {
			SC_INITIATOR = root
			SC_ATTACKER = root
			SC_DEFENDER = scope:duel_target
			FATALITY = no
			FIXED = no
			LOCALE = throne_room
			OUTPUT_EVENT = lopc_duel_event.0001
			INVALIDATION_EVENT = lopc_duel_event.0003
		}
		#scope:scheme = {
		#	end_scheme = yes
		#}
	}
}

#Failure
lopc_scheme_event.0033 = {
	type = character_event
	title = lopc_scheme_event.0033.t
	desc = {
		desc = lopc_scheme_event.0033.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = disappointed
	}
	lower_right_portrait = scope:target

	immediate = {
		#lopc_failed_service_scheme_effect = {
		#	TARGET = scope:target
		#}
		# Failing this task should essentially just mean no one wanted to duel you
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# clerical Service Scheme
lopc_scheme_event.0041 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_character = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0042
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0043
						days = 1
					}	
				}
			}
		}
	}
}

#Success
lopc_scheme_event.0042 = {
	type = character_event
	title = lopc_scheme_event.0042.t
	desc = {
		desc = lopc_scheme_event.0042.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = scheme
	}
	lower_right_portrait = scope:target

	immediate = {
		# Trigger the response event for the target
		scope:target = {
			add_character_modifier = {
				modifier = lopc_faithful_approval
				years = 1
			}
		}
		add_piety = 50
		add_prestige = 50
	}

	option = {
		name = lopc_scheme_event.0002.a
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
}

#Failure
lopc_scheme_event.0043 = {
	type = character_event
	title = lopc_scheme_event.0043.t
	desc = {
		desc = lopc_scheme_event.0043.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = disappointed
	}
	lower_right_portrait = scope:target

	immediate = {
		lopc_failed_service_scheme_effect = {
			TARGET = scope:target
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# develop Service Scheme
lopc_scheme_event.0051 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_title = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0052
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0053
						days = 1
					}	
				}
			}
		}
	}
}

#Success - WIP
lopc_scheme_event.0052 = {
	type = character_event
	title = lopc_scheme_event.0052.t
	desc = {
		desc = lopc_scheme_event.0052.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = scheme
	}
	lower_right_portrait = scope:target.holder

	immediate = {
		# Trigger the response event for the target
	}

	option = {
		name = lopc_scheme_event.0002.a
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target.holder
		}
		scope:target = {
			change_development_progress = 25
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
}

#Failure
lopc_scheme_event.0053 = {
	type = character_event
	title = lopc_scheme_event.0053.t
	desc = {
		desc = lopc_scheme_event.0053.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = disappointed
	}
	lower_right_portrait = scope:target.holder

	immediate = {
		lopc_failed_service_scheme_effect = {
			TARGET = scope:target.holder
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# event Service Scheme - WIP
lopc_scheme_event.0061 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_character = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0062
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0063
						days = 1
					}	
				}
			}
		}
	}
}

#Success
lopc_scheme_event.0062 = {
	type = character_event
	title = lopc_scheme_event.0062.t
	desc = {
		desc = lopc_scheme_event.0062.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = scheme
	}
	lower_right_portrait = scope:target

	immediate = {
		# Trigger the response event for the target
		add_prestige = 125
	}

	option = {
		name = lopc_scheme_event.0002.a
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
}

#Failure
lopc_scheme_event.0063 = {
	type = character_event
	title = lopc_scheme_event.0063.t
	desc = {
		desc = lopc_scheme_event.0063.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = disappointed
	}
	lower_right_portrait = scope:target

	immediate = {
		lopc_failed_service_scheme_effect = {
			TARGET = scope:target
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# minority Service Scheme
lopc_scheme_event.0071 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scope:target = {
				random_vassal = {
					limit = { NOT = { has_culture = scope:target.culture this = scope:owner } }
					save_scope_as = targeted_minority
				}
			}
			scheme_target_character = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0072
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0073
						days = 1
					}	
				}
			}
		}
	}
}

#Success
lopc_scheme_event.0072 = {
	type = character_event
	title = lopc_scheme_event.0072.t
	desc = {
		desc = lopc_scheme_event.0072.desc
	}
	theme = learning
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:targeted_minority
		animation = admiration
	}
	lower_right_portrait = scope:target

	immediate = {
		# Trigger the response event for the target
		add_prestige = 50
		scope:target = {
			add_character_modifier = {
				modifier = lopc_minority_approval
				years = 1
			}
			culture = {
				change_cultural_acceptance = {
					target = scope:targeted_minority.culture
					value = 1
					desc = lopc_courtier_x_acceptance_desc
				}
			}
		}
	}

	option = {
		name = lopc_scheme_event.0002.a
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
	after = { # Target response
	#	scope:target = {
	#		trigger_event = scheme_critical_moments.1134
	#	}
	}
}

#Failure
lopc_scheme_event.0073 = {
	type = character_event
	title = lopc_scheme_event.0073.t
	desc = {
		desc = lopc_scheme_event.0073.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = disappointed
	}
	right_portrait = {
		character = scope:targeted_minority
		animation = angry
	}
	lower_right_portrait = scope:target

	immediate = {
		lopc_failed_service_scheme_effect = {
			TARGET = scope:target
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# physician Service Scheme
lopc_scheme_event.0081 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_character = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = physician
				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0082
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0083
						days = 1
					}	
				}
			}
		}
	}
}

#Success
lopc_scheme_event.0082 = {
	type = character_event
	title = lopc_scheme_event.0082.t
	desc = {
		desc = lopc_scheme_event.0082.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = scheme
	}
	lower_right_portrait = scope:target

	immediate = {
		# Trigger the response event for the target
		add_prestige = 50
		if = {  
			limit = { NOT = { has_trait = lifestyle_physician } } 
			random_list = {
				25 = { add_trait = lifestyle_physician }
				75 = 0
			}
		}
		else = {
			add_trait_xp = {
				trait = lifestyle_physician
				value = 4
			}
		}
	}

	option = {
		name = lopc_scheme_event.0002.a
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target
		}
		duel = {
			skill = learning
			value = high_skill_rating 
			20 = { # Success! Major Treatment
				modifier = {
					root = { has_trait = lifestyle_physician }
					factor = 2
				}
				modifier = {
					root = {
						has_trait = lifestyle_physician
						has_trait_xp = {
							trait = lifestyle_physician
							value >= 50
						}
					}
					factor = 2
				}
				modifier = {
					root = {
						has_trait = lifestyle_physician
						has_trait_xp = {
							trait = lifestyle_physician
							value >= 100
						}
					}
					factor = 4
				}
				desc = lopc_scheme_event.0082.success
				
				compare_modifier = {
					value = scope:duel_value
					multiplier = 4
					min = -40
				}
				
				send_interface_toast = {
					title = lopc_scheme_event.0082.success
					left_icon = scope:target
					scope:target = {
						lopc_great_treatment_effect = yes
					}
				}
			}
			50 = { # Failure! Minor Treatment
				desc = lopc_scheme_event.0082.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -6
					min = -40
				}
				
				send_interface_toast = {
					title = lopc_scheme_event.0082.failure
					left_icon = scope:target
					scope:target = {
						lopc_good_treatment_effect = yes
					}
					custom_tooltip = lopc_scheme_event.0082.failure_tt
				}
			}
		}
		add_hook = {
			type = indebted_hook  
			target = scope:target
			years = 5
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
	
	option = { # Intentionally screw up
		name = lopc_scheme_event.0082.b
		custom_tooltip = lopc_scheme_event.0082.betrayal_tt
		stress_impact = {
			base = miniscule_stress_impact_gain
			paranoid = miniscule_stress_impact_gain
			just = major_stress_impact_gain
			loyal = major_stress_impact_gain 
			compassionate = major_stress_impact_gain
		}
		duel = {
			skill = intrigue
			value = high_skill_rating 
			50 = { # Success! Get away with it!
				desc = lopc_scheme_event.0082.success
				
				compare_modifier = {
					value = scope:duel_value
					multiplier = 4
					min = -40
				}
				
				send_interface_toast = {
					title = lopc_scheme_event.0082.success
					left_icon = scope:target
					scope:target = {
						wound_treatment_results_effect = { TREATMENT = risky OUTCOME = failure }
						add_opinion = {
							target = root
							modifier = botched_my_treatment_opinion  
						}
						trigger_event = {
							id = health.4102
							days = { 1 5 }
						}
					}
				}
			}
			50 = { # Failure! Caught! Resolve attempted murder effect
				desc = lopc_scheme_event.0082.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -6
					min = -40
				}
				
				send_interface_toast = {
					title = lopc_scheme_event.0082.failure
					left_icon = scope:target
					add_piety_level = -1
					attempted_murder_opinion_effect = {
						VICTIM = scope:target
						MURDERER = scope:root
					}
					scope:target = {						
						trigger_event = {
							id = health.4105
							days = { 1 5 }
						}
					}
				}
			}
		}
		
		
		scope:scheme = {
			end_scheme = yes
		}
	}
}

#Failure
lopc_scheme_event.0083 = {
	type = character_event
	title = lopc_scheme_event.0083.t
	desc = {
		desc = lopc_scheme_event.0083.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = disappointed
	}
	lower_right_portrait = scope:target

	immediate = {
		lopc_failed_service_scheme_effect = {
			TARGET = scope:target
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		duel = {
			skill = learning
			value = high_skill_rating 
			50 = { # Success! 
				modifier = {
					root = { has_trait = lifestyle_physician }
					factor = 2
				}
				modifier = {
					root = {
						has_trait = lifestyle_physician
						has_trait_xp = {
							trait = lifestyle_physician
							value >= 50
						}
					}
					factor = 2
				}
				modifier = {
					root = {
						has_trait = lifestyle_physician
						has_trait_xp = {
							trait = lifestyle_physician
							value >= 100
						}
					}
					factor = 4
				}
				desc = lopc_scheme_event.0083.success
				
				compare_modifier = {
					value = scope:duel_value
					multiplier = 4
					min = -40
				}
				
				send_interface_toast = {
					title = lopc_scheme_event.0083.success
					left_icon = scope:target
					scope:target = {
						wound_treatment_results_effect = { TREATMENT = safe OUTCOME = failure }
						trigger_event = {
							id = health.4102
							days = { 1 5 }
						}
					}
				}
			}
			50 = { # Failure! Botched Treatment
				desc = lopc_scheme_event.0083.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -6
					min = -40
				}
				
				send_interface_toast = {
					title = lopc_scheme_event.0083.failure
					left_icon = scope:target
					scope:target = {
						wound_treatment_results_effect = { TREATMENT = risky OUTCOME = failure }
						trigger_event = {
							id = health.4105
							days = { 1 5 }
						}
						add_opinion = {
							target = root
							modifier = botched_my_treatment_opinion  
						}
					}
					custom_tooltip = lopc_scheme_event.0083.failure_tt
				}
			}
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# republican Service Scheme
lopc_scheme_event.0091 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scope:target = {
				random_vassal = {
					limit = { has_government = republic_government }
					save_scope_as = targeted_republican
				}
			}
			scheme_target_character = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0092
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0093
						days = 1
					}	
				}
			}
		}
	}
}

#Success
lopc_scheme_event.0092 = {
	type = character_event
	title = lopc_scheme_event.0092.t
	desc = {
		desc = lopc_scheme_event.0092.desc_0
		first_valid = { # Court Grandeur - if not kingdom or empire, just something
			triggered_desc = { # No grandeur
				trigger = {
					scope:targeted_republican = {
						gold < 50
					}
				}
				desc = lopc_scheme_event.0092.desc_1_NoWealth
			}
			desc = lopc_scheme_event.0092.desc_1_Wealth
		}
		desc = lopc_scheme_event.0092.desc_2
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:targeted_republican
		animation = admiration
	}
	lower_right_portrait = scope:target

	immediate = {
		# Trigger the response event for the target
		add_prestige = 50
		scope:target = {
			add_character_modifier = {
				modifier = lopc_merchant_approval
				years = 2
			}
		}
	}

	option = {
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target
		}
		name = lopc_scheme_event.0002.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

#Failure
lopc_scheme_event.0093 = {
	type = character_event
	title = lopc_scheme_event.0093.t
	desc = {
		desc = lopc_scheme_event.0093.desc
	}
	theme = diplomacy
	left_portrait = {
		character = root
		animation = disappointed
	}
	right_portrait = {
		character = scope:targeted_republican
		animation = dismissal
	}
	lower_right_portrait = scope:target

	immediate = {
		lopc_failed_service_scheme_effect = {
			TARGET = scope:target
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# strategic Service Scheme
lopc_scheme_event.0101 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_character = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0102
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0103
						days = 1
					}	
				}
			}
		}
	}
}

#Success
lopc_scheme_event.0102 = {
	type = character_event
	title = lopc_scheme_event.0102.t
	desc = {
		desc = lopc_scheme_event.0102.desc
	}
	theme = war
	left_portrait = {
		character = root
		animation = scheme
	}
	lower_right_portrait = scope:target

	immediate = {
		# Trigger the response event for the target
		add_prestige = 75
		scope:target = {
			lopc_add_war_modifier = yes
		}
	}

	option = {
		name = lopc_scheme_event.0002.a
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
}

#Failure
lopc_scheme_event.0103 = {
	type = character_event
	title = lopc_scheme_event.0103.t
	desc = {
		desc = lopc_scheme_event.0103.desc
	}
	theme = war
	left_portrait = {
		character = root
		animation = disappointed
	}
	lower_right_portrait = scope:target

	immediate = {
		lopc_failed_service_scheme_effect = {
			TARGET = scope:target
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

# chronicler Service Scheme
lopc_scheme_event.0111 = {
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_character = { save_scope_as = target }
			scheme_owner = {
				save_scope_as = owner

				#SUCCESS ROLL
				random = {
					chance = scope:scheme.scheme_success_chance

					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						exists = scope:scheme_successful
					}
					trigger_event = {
						id = lopc_scheme_event.0112
						days = 1
					}
				}
				else = {
					trigger_event = {
						id = lopc_scheme_event.0113
						days = 1
					}	
				}
			}
		}
	}
}

#Success
lopc_scheme_event.0112 = {
	type = character_event
	title = lopc_scheme_event.0112.t
	desc = {
		desc = lopc_scheme_event.0112.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:newly_created_artifact
				}	
				desc = lopc_scheme_event.0112.desc_Artifact
			}
			
			desc = lopc_scheme_event.0112.desc_NoArtifact
		}
	}
	theme = learning_scholarship_focus
	override_background = { reference = study }
	left_portrait = {
		character = root
		animation = scheme
	}
	lower_right_portrait = scope:target


	artifact = { # To display the artifact in the event-window
		target = scope:newly_created_artifact
		position = lower_center_portrait
	}
	
	immediate = {
		# Trigger the response event for the target
		add_prestige = 75
		if = {
			limit = { has_character_flag = flag:lopc_legend_chronicle }
			scope:target = {
				add_character_modifier = {
					modifier = lopc_improved_legend_spread
					years = 3
				}
			}
		}
		else_if = {
			limit = { has_character_flag = flag:lopc_piety_chronicle }
			scope:target = {
				add_piety = 100
			}
			random_list = {
				80 = 0
				
				20 = {
					create_artifact_book_effect = {
						OWNER = scope:target
						CREATOR = root
						SET_SUBJECT = flag:learning
						SET_TOPIC = flag:no
					}
				}
			}
		}
		else_if = {
			limit = { has_character_flag = flag:lopc_renown_chronicle }
			scope:target = {
				dynasty ?= {
					add_dynasty_prestige = 50
				}
			}
			random_list = {
				80 = 0
				
				20 = {
					create_artifact_book_effect = {
						OWNER = scope:target
						CREATOR = root
						SET_SUBJECT = flag:dynasty
						#flag:family_epic
						SET_TOPIC = flag:no
					}
				}
			}
		}
		else_if = {
			limit = { has_character_flag = flag:lopc_prestige_chronicle_martial }
			scope:target = {
				add_prestige = 100
			}
			random_list = {
				80 = 0
				
				20 = {
					create_artifact_book_effect = {
						OWNER = scope:target
						CREATOR = root
						SET_SUBJECT = flag:martial
						SET_TOPIC = flag:no
					}
				}
			}
		}
		else_if = {
			limit = { has_character_flag = flag:lopc_prestige_chronicle_diplomacy }
			scope:target = {
				add_prestige = 100
			}
			random_list = {
				80 = 0
				
				20 = {
					create_artifact_book_effect = {
						OWNER = scope:target
						CREATOR = root
						SET_SUBJECT = flag:diplomacy
						SET_TOPIC = flag:no
					}
				}
			}
		}
		else_if = {
			limit = { has_character_flag = flag:lopc_prestige_chronicle_stewardship }
			scope:target = {
				add_prestige = 100
			}
			random_list = {
				80 = 0
				
				20 = {
					create_artifact_book_effect = {
						OWNER = scope:target
						CREATOR = root
						SET_SUBJECT = flag:stewardship
						SET_TOPIC = flag:no
					}
				}
			}
		}
		else_if = {
			limit = { has_character_flag = flag:lopc_prestige_chronicle_intrigue }
			scope:target = {
				add_prestige = 100
			}
			random_list = {
				80 = 0
				
				20 = {
					create_artifact_book_effect = {
						OWNER = scope:target
						CREATOR = root
						SET_SUBJECT = flag:intrigue
						SET_TOPIC = flag:no
					}
				}
			}
		}
		else = {
			limit = { has_character_flag = flag:lopc_prestige_chronicle_martial }
			scope:target = {
				add_prestige = 100
			}
			random_list = {
				80 = 0
				
				20 = {
					create_artifact_book_effect = {
						OWNER = scope:target
						CREATOR = root
						SET_SUBJECT = flag:no
						SET_TOPIC = flag:no
					}
				}
			}
		}
		hidden_effect = {
			#if = {
				#limit = {
				#	exists = scope:newly_created_artifact
				#}
			random_list = {
				5 = {
					modifier = {
						add = 5
						multiply = scope:owner.learning
					}
					add_prestige = 500
					hidden_effect_new_object = {
						scope:newly_created_artifact = {
							set_artifact_rarity = illustrious
						}
					}
				}
				40 = {
					modifier = {
						add = 40
						multiply = {
							value = scope:owner.learning
							multiply = 0.25
						}
					}
					add_prestige = 250
					hidden_effect_new_object = {
						scope:newly_created_artifact = {
							set_artifact_rarity = famed
						}
					}
				}
				60 = {
					modifier = {
						add = 60
						multiply = {
							value = scope:owner.learning
							multiply = 0.12
						}
					}
					add_prestige = 150
					hidden_effect_new_object = {
						scope:newly_created_artifact = {
							set_artifact_rarity = masterwork
						}
					}
				}
				450 = {
					scope:owner = {
						add_prestige = 100
					}
					hidden_effect_new_object = {
						scope:newly_created_artifact = {
							set_artifact_rarity = common
						}
					}
				}
			}
			#}
		}
	}

	option = {
		name = lopc_scheme_event.0002.a
		lopc_successful_service_scheme_effect = {
			TARGET = scope:target
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
	
	after = {
		remove_character_flag = flag:lopc_renown_chronicle
		remove_character_flag = flag:lopc_prestige_chronicle_martial
		remove_character_flag = flag:lopc_prestige_chronicle_intrigue
		remove_character_flag = flag:lopc_prestige_chronicle_diplomacy
		remove_character_flag = flag:lopc_prestige_chronicle_stewardship
		remove_character_flag = flag:lopc_piety_chronicle
		remove_character_flag = flag:lopc_legend_chronicle
	}
}

#Failure
lopc_scheme_event.0113 = {
	type = character_event
	title = lopc_scheme_event.0113.t
	desc = {
		desc = lopc_scheme_event.0113.desc
	}
	theme = learning_scholarship_focus
	override_background = { reference = study }
	left_portrait = {
		character = root
		animation = disappointed
	}
	lower_right_portrait = scope:target

	immediate = {
		lopc_failed_service_scheme_effect = {
			TARGET = scope:target
		}
	}

	#Option A: Too bad
	option = {
		name = lopc_scheme_event.0003.a
		scope:scheme = {
			end_scheme = yes
		}
	}
}

#Decide type of chronicle
lopc_scheme_event.0114 = {
	type = character_event
	title = lopc_scheme_event.0114.t
	desc = {
		desc = lopc_scheme_event.0114.desc
	}
	theme = learning_scholarship_focus
	override_background = { reference = study }
	left_portrait = {
		character = root
		animation = writing
	}
	lower_right_portrait = scope:target

	#Option A: Prestige
	option = {
		name = lopc_scheme_event.0114.a
		trigger_event = lopc_scheme_event.0115
	}

	#Option B: Piety
	option = {
		name = lopc_scheme_event.0114.b
		add_character_flag = flag:lopc_piety_chronicle
	}

	#Option C: Renown
	option = {
		name = lopc_scheme_event.0114.c
		add_character_flag = flag:lopc_renown_chronicle
	}

	#Option D: Promoted Legend
	option = {
		trigger = {
			scope:target = {
				exists = promoted_legend
			}
		}
		show_as_unavailable = {
			always = yes
		}
		name = lopc_scheme_event.0114.d
		add_character_flag = flag:lopc_legend_chronicle
	}
}

# Decide skill for prestige
lopc_scheme_event.0115 = {
	type = character_event
	title = lopc_scheme_event.0114.t
	desc = {
		desc = lopc_scheme_event.0115.desc
	}
	theme = learning_scholarship_focus
	override_background = { reference = study }
	left_portrait = {
		character = root
		animation = writing
	}
	lower_right_portrait = scope:target

	#Option A: A book detailing his martial exploits (a high martial will help produce a book)
	option = {
		name = lopc_scheme_event.0115.a
		skill = martial
		add_character_flag = flag:lopc_prestige_chronicle_martial
	}

	#Option B: A book highlighting his dread reputation (a high intrigue will help produce a book)
	option = {
		name = lopc_scheme_event.0115.b
		skill = intrigue
		add_character_flag = flag:lopc_prestige_chronicle_intrigue
	}

	#Option C: A collection of [liege.capital.adjective] ideas on realm management 
	option = {
		name = lopc_scheme_event.0115.c
		skill = stewardship
		add_character_flag = flag:lopc_prestige_chronicle_stewardship
	}

	#Option D: Details of her diplomatic dealings
	option = {
		name = lopc_scheme_event.0115.d
		skill = diplomacy
		add_character_flag = flag:lopc_prestige_chronicle_diplomacy
	}
}